service: graphql-dynamodb-pt4
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: "us-east-1"
  # profile: node-serveless
  stage: ${opt:stage, "dev"}
  environment:
    HEROES_TABLE: Heroes
    SKILLS_TABLE: Skills
    LOCALSTACK_HOST: ${env:LOCALSTACK_HOST, "localhost"}
    LOCALSTACK_PORT: ${env:LOCALSTACK_PORT, "4566"}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:DescribeTable
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.HEROES_TABLE}"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.SKILLS_TABLE}"

package:
  excludeDevDependencies: true
  #way lambda functions are packed in project
  individually: true

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      host: ${self:provider.environment.LOCALSTACK_HOST}
      port: ${self:provider.environment.LOCALSTACK_PORT}
      # insert data into tables
      seed: true
      # run settings, create tables, etc
      migrate: true
      noStart: true
    seed:
      heroes:
        sources:
          - table: ${self:provider.environment.HEROES_TABLE}
            sources: [./seed/heroes.json]
      skills:
        sources:
          - table: ${self:provider.environment.SKILLS_TABLE}
            sources: [./seed/skills.json]

functions:
  test:
    handler: handler.test
    events:
      - http:
          path: test
          method: any
  graphql:
    handler: handler.handler
    events:
      - http:
          path: graphql
          method: any

resources:
  Resources:
    Heroes:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.HEROES_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        #keys of table (primary e foreign keys)
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    Skills:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.SKILLS_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        #keys of table (primary e foreign keys)
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
